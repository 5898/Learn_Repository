查看git系统配置信息
git config --system --list

查看当前用户（global）配置
git config --global  --list
全局文件配置路径：C:\Users\Administrator\.gitconfig

查看当前仓库配置信息
git config --local  --list
仓库文件配置路径：仓库/.git/config



git多个ssh key账户配置：
window下配置，通过不同host控制同域不同账户/不同域账户(gitee码云，github(github/gitea),gitlab)

打开cmd/git bash,进入"C:\Users\用户名\.ssh"目录：cd ~/.ssh

生成ssh key:
ssh-keygen -t rsa -C your_email_1      # git登录邮箱账号
Enterfile in which to save the key: id_rsa_user1   # 输入存储文件名:id_rsa_xxx,默认id_rsa
Enter passphrase：                     # 输入创建ssh_key的密码,默认空


生成第二个账号的ssh key:
ssh-keygen -t rsa -C your_email_2
Enterfile in which to save the key: id_rsa_user2


"C:\Users\用户名\.ssh"下生成id_rsa_user1和id_rsa_user1.pub
把.pub文件的内容复制至git账号——Settings 添加ssh key



添加~/.ssh下的config文件
添加无后缀的文件重命名config
HostName 　　　　　　　          #  这个是真实的域名地址,如github.com、git.oschina.net
IdentityFile 　　　　　　　      # 这里是id_rsa的地址
PreferredAuthentications   # 配置登录时用什么权限认证--可设为publickey,password publickey,keyboard-interactive等
User 　　　　　　　　　　　         # 配置使用用户名
Host                       # 可以取为自己喜欢的名字，会影响git相关命令，如git clone git@hostUser1:<url>、ssh -T git@hostUser1、git remote set-url origin git@hostUser1:<url>


config文件配置如下:
# 配置github.com账户1:user1
Host hostUser1
    HostName github.com
    IdentityFile C:\\Users\\用户名\\.ssh\\id_rsa_user1
    PreferredAuthentications publickey
    User userName1

# 配置github.com账户2:user2
Host hostUser2
    HostName github.com
    IdentityFile C:\\Users\\用户名\\.ssh\\id_rsa_user2
    PreferredAuthentications publickey
    User userName2

# 配置git.oschina.net码云账户
Host git.oschina.net
    HostName git.oschina.net
    IdentityFile C:\\Users\\用户名\\.ssh\\id_rsa_oschina
    PreferredAuthentications publickey
    User username3



测试公钥配置是否成功:
ssh -T git@hostUser1        # 映射github的user1账户
Are you sure you want to continue connecting(yes/no)?yes # 第一次连接
返回Hi user1则成功配置
同理：
ssh -T git@hostUser2
ssh -T git@git.oschina.net
同时~/.ssh下自动生成known_hosts文件，电脑配置多git账号成功



已配置多个账号后,不同项目仓库用对应账号：
git clone git@hostUser1:user1/仓库名.git
git config user.name user1
git config user.email your_email_1
若不配置，则默认使用"C:\Users\Administrator\.gitconfig"全局配置账号




## 添加本地仓库用户信息
注：即使成功生成ssh key,但绑定https远程仓库后还是会出现输入密码
更换远程仓库地址https为git链接即可



常用命令
ssh-keygen -t rsa -C "your_email" 生成ssh key，默认文件名id_rsa
ssh-keygen -t rsa -f ~/.ssh/id_rsa.github -C "your_email" 生成指定文件名id_rsa.github
git config --global user.name "your name" # 设置用户名
git config --global user.email "your_email" # 设置邮箱

git init # 创建git仓库
git remote add origin [your ssh repositories] # 添加远程仓库
git remote set-url origin [your ssh repositories] # 修改关联的远程仓库地址
git remote -v # 查看远程仓库


git branch -a # 查看全部分支


git reset [--hard | soft | mixed | merge | keep ] # 合并
git reset --mixed HEAD~1 # 回退上一个提交，保留更改
git reset --hard HEAD~1 # 回退上一个提交，丢弃上个提交之后的更改


git commit --amend -m "新的提交信息" # 修改最近一次提交信息
